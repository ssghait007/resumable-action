name: 'CSV Processor with Resume'
description: 'Process CSV files with automatic resume capability from last failed record'
author: 'Your Name'

branding:
  icon: 'file-text'  # Choose from: https://feathericons.com/
  color: 'blue'      # Options: white, yellow, blue, green, orange, red, purple, gray-dark

inputs:
  csv-file:
    description: 'Path to the CSV file to process'
    required: true
  processing-script:
    description: 'Path to your Python processing script'
    required: true
  start-index:
    description: 'Index to start processing from (defaults to 0)'
    required: false
    default: '0'
  artifact-retention-days:
    description: 'Number of days to retain the checkpoint artifact'
    required: false
    default: '1'

outputs:
  last-processed:
    description: 'Index of the last successfully processed record'
    value: ${{ steps.process.outputs.last-processed }}  # Added value property

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Download last checkpoint
      id: download-checkpoint
      continue-on-error: true
      uses: actions/download-artifact@v3
      with:
        name: ${{ github.action }}-${{ inputs.csv-file }}-checkpoint

    - name: Test artifact download
      shell: bash
      run: |
        pwd
        ls -R

    - name: Read checkpoint
      id: read-checkpoint
      continue-on-error: true
      shell: bash
      run: |
        if [ -f "./checkpoint/last_processed.txt" ]; then
          echo "LAST_PROCESSED=$(cat ./checkpoint/last_processed.txt)" >> $GITHUB_OUTPUT
        else
          echo "LAST_PROCESSED=${{ inputs.start-index }}" >> $GITHUB_OUTPUT
        fi

    - name: Process CSV
      id: process
      shell: bash
      run: |
        # Run the processing script
        python ${{ github.action_path }}/process_script.py \
          --csv-file "${{ inputs.csv-file }}" \
          --start-index ${{ steps.read-checkpoint.outputs.LAST_PROCESSED }}

        # Save and output the current index
        if [ -f "current_index.txt" ]; then
          current_index=$(cat current_index.txt)
          mkdir -p ./checkpoint
          cp current_index.txt ./checkpoint/last_processed.txt
          echo "current_index=${current_index}" >> $GITHUB_OUTPUT
        else
          echo "Warning: current_index.txt not found"
          current_index=${{ steps.read-checkpoint.outputs.LAST_PROCESSED }}
          echo "${current_index}" > ./checkpoint/last_processed.txt
          echo "current_index=${current_index}" >> $GITHUB_OUTPUT
        fi

    - name: Save checkpoint
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.action }}-${{ inputs.csv-file }}-checkpoint
        path: ./checkpoint
        retention-days: ${{ inputs.artifact-retention-days }}
